{"version":3,"file":"static/js/392.41a96876.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/Carousel.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});"],"names":["fn","deps","isFirst","useRef","useEffect","current","WeakMap","_excluded","Anchor","React","_ref","ref","onKeyDown","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","useEventCallback","e","href","trim","role","_jsx","displayName","CarouselCaption","className","bsPrefix","as","Component","useBootstrapPrefix","classNames","CarouselItem","finalClassName","map","children","func","index","child","Carousel","_ref2","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","interval","keyboard","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","variant","useUncontrolled","prefix","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","useState","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","concat","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","test","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","Math","abs","set","undefined","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","_jsxs","type","onClick","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Caption","Item"],"sourceRoot":""}