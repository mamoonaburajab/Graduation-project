{"version":3,"file":"static/js/528.a7d8d87d.chunk.js","mappings":"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","sources":["component/ViewAppointments/ViewAppointments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Space, Table, Tag, Button, message, Tabs } from \"antd\";\nimport \"./ViewAppointments.css\";\nimport NavbarM from \"../navbarMom/NavbarM\";\nimport axios from \"axios\";\n\n// Helper function to format dates\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString(\"en-US\"); // Adjust the locale and options as needed\n};\n\n// Helper function to get the day of the week\nconst getDayOfWeek = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString(\"ar-EG\", { weekday: \"long\" }); // 'ar-EG' for Arabic day names\n};\n\nconst getStatusTag = (status) => {\n  switch (status) {\n    case 0:\n      return <Tag color=\"volcano\">ملغاة</Tag>; // Cancelled\n    case 1:\n      return <Tag color=\"green\">مكتملة</Tag>; // Done\n    default:\n      return <Tag color=\"geekblue\">قادم</Tag>; // Upcoming\n  }\n};\n\nconst ViewAppointments = () => {\n  const [appointments, setAppointments] = useState({\n    upcomingAppointments: [],\n    pastAppointments: [],\n  });\n  const [activeTab, setActiveTab] = useState(\"upcoming\"); // State to manage the active tab\n  const motherId = localStorage.getItem(\"userId\"); // Assuming mother's ID is stored in local storage\n\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const response = await axios.post(\n          `http://localhost:4504/Mother/ViewApp`,\n          { motherId } // Sending motherId in the request body\n        );\n        const formattedData = {\n          upcomingAppointments: response.data.upcomingAppointments.map(\n            (appointment) => ({\n              ...appointment,\n              date: formatDate(appointment.date),\n              day: getDayOfWeek(appointment.date),\n              time: appointment.Time, // Assuming time is in the format \"HH:MM:SS\"\n              status: appointment.status, // Adding status\n            })\n          ),\n          pastAppointments: response.data.pastAppointments.map(\n            (appointment) => ({\n              ...appointment,\n              date: formatDate(appointment.date),\n              day: getDayOfWeek(appointment.date),\n              time: appointment.Time, // Assuming time is in the format \"HH:MM:SS\"\n              status: appointment.status, // Adding status\n            })\n          ),\n        };\n        setAppointments(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching appointments:\", error);\n      }\n    };\n\n    fetchAppointments();\n  }, [motherId]);\n\n  const handleDelete = async (key) => {\n    try {\n      await axios.delete(`http://localhost:4504/Mother/ViewApp/${key}`);\n      message.success(\"Appointment deleted successfully\");\n      setAppointments((prevAppointments) => ({\n        ...prevAppointments,\n        upcomingAppointments: prevAppointments.upcomingAppointments.filter(\n          (appointment) => appointment.id !== key\n        ),\n        pastAppointments: prevAppointments.pastAppointments.filter(\n          (appointment) => appointment.id !== key\n        ),\n      }));\n    } catch (error) {\n      console.error(\"Error deleting appointment:\", error);\n      message.error(\"Failed to delete appointment\");\n    }\n  };\n\n  const upcomingColumns = [\n    {\n      title: \"الإجراءات\", // Actions\n      key: \"actions\",\n      dataIndex: \"actions\",\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button type=\"link\" onClick={() => handleDelete(record.id)}>\n            حذف\n          </Button>\n        </Space>\n      ),\n      fixed: \"left\", // This will fix the column to the left\n    },\n    {\n      title: \"حالة الموعد\",\n      key: \"status\",\n      dataIndex: \"status\",\n      render: (status) => getStatusTag(status),\n    },\n    {\n      title: \"الوقت\",\n      dataIndex: \"time\",\n      key: \"time\",\n    },\n    {\n      title: \"اليوم\",\n      dataIndex: \"day\",\n      key: \"day\",\n    },\n    {\n      title: \"التاريخ\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n  ];\n\n  const pastColumns = [\n    {\n      title: \"حالة الموعد\",\n      key: \"status\",\n      dataIndex: \"status\",\n      render: (status) => getStatusTag(status),\n    },\n    {\n      title: \"الوقت\",\n      dataIndex: \"time\",\n      key: \"time\",\n    },\n    {\n      title: \"اليوم\",\n      dataIndex: \"day\",\n      key: \"day\",\n    },\n    {\n      title: \"التاريخ\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <NavbarM />\n      <div className=\"tabs-container\">\n        <Tabs defaultActiveKey=\"upcoming\" onChange={setActiveTab}>\n          <Tabs.TabPane tab=\"المواعيد القادمة\" key=\"upcoming\">\n            <Table\n              columns={upcomingColumns}\n              dataSource={appointments.upcomingAppointments}\n              scroll={{ x: 1000 }}\n              rowKey=\"id\"\n              loading={!appointments.upcomingAppointments.length} // Show loading indicator until data is loaded\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"المواعيد السابقة\" key=\"past\" className=\"\">\n            <Table\n              columns={pastColumns}\n              dataSource={appointments.pastAppointments}\n              scroll={{ x: 1000 }}\n              rowKey=\"id\"\n              loading={!appointments.pastAppointments.length} // Show loading indicator until data is loaded\n            />\n          </Tabs.TabPane>\n        </Tabs>\n      </div>\n      <div className=\"table-container\">\n        {/* Empty div to maintain the structure */}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewAppointments;\n"],"names":["formatDate","dateString","Date","toLocaleDateString","getDayOfWeek","weekday","getStatusTag","status","_jsx","Tag","color","children","ViewAppointments","appointments","setAppointments","useState","upcomingAppointments","pastAppointments","activeTab","setActiveTab","motherId","localStorage","getItem","useEffect","async","response","axios","post","formattedData","data","map","appointment","date","day","time","Time","error","console","fetchAppointments","upcomingColumns","title","key","dataIndex","render","_","record","Space","size","Button","type","onClick","delete","concat","message","success","prevAppointments","filter","id","handleDelete","fixed","pastColumns","_jsxs","className","NavbarM","Tabs","defaultActiveKey","onChange","TabPane","tab","Table","columns","dataSource","scroll","x","rowKey","loading","length"],"sourceRoot":""}