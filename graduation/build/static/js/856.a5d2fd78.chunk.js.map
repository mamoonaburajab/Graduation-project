{"version":3,"file":"static/js/856.a5d2fd78.chunk.js","mappings":"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","sources":["component/NavbarDoc/NavbarDoc.jsx","component/ChildInfo/ChildInfo.jsx","pages/Doctor/ChildInfoPage/ChildInfoPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavbarDoc.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport {\n  CNavbarToggler,\n  CCollapse,\n  CNavbarNav,\n  CNavItem,\n  CNavLink,\n  CNavbar,\n  CContainer,\n  CNavbarBrand,\n  CForm,\n} from \"@coreui/react\";\nimport profileImage from \"../../assets/image/profile.png\"; // Adjust the path to where your image is stored\n\nconst NavbarD = () => {\n  const [visible, setVisible] = useState(false);\n  const [activeNavItem, setActiveNavItem] = useState(\"//home\");\n\n  const handleNavItemClick = (itemName) => {\n    setActiveNavItem(itemName);\n    setVisible(false); // Close the menu after clicking an item on small devices\n  };\n\n  return (\n    <div id=\"color\">\n      <CNavbar\n        expand=\"lg\"\n        colorScheme=\"light\"\n        style={{\n          backgroundImage:\n            \"radial-gradient(circle at 53.4% -80.8%, rgba(9, 29, 85, 1) 0.2%, rgba(0, 0, 0, 1) 100.2%)\",\n        }}\n        className=\"fixed-top color\"\n      >\n        <CContainer fluid>\n          <CNavbarBrand className=\"text-white\" href=\"/login\">\n            تسجيل الخروج\n          </CNavbarBrand>\n          <CNavbarBrand href=\"/\">\n            <OverlayTrigger\n              key=\"right\"\n              placement=\"right\"\n              overlay={<Tooltip id=\"tooltip-right\">الملف الشخصي</Tooltip>}\n            >\n              <img\n                src={profileImage}\n                alt=\"Profile\"\n                style={{ height: \"30px\" }}\n              />\n            </OverlayTrigger>\n          </CNavbarBrand>\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\n          <CCollapse className=\"navbar-collapse items\" visible={visible}>\n            <CNavbarNav className=\"ms-auto\">\n              <CNavItem>\n                <CNavLink\n                  href=\"https://www.youtube.com/\"\n                  active={activeNavItem === \"notes\"}\n                  onClick={() => handleNavItemClick(\"notes\")}\n                  className=\"text-white \"\n                >\n                  احصائيات\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/Doctor/Appointments\"\n                  active={activeNavItem === \"health\"}\n                  onClick={() => handleNavItemClick(\"health\")}\n                  className=\"text-white\"\n                >\n                  جدول المواعيد\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/doctor/child\"\n                  active={activeNavItem === \"health\"}\n                  onClick={() => handleNavItemClick(\"health\")}\n                  className=\"text-white\"\n                >\n                  الاطفال\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/doctor/home\"\n                  active={activeNavItem === \"home\"}\n                  onClick={() => handleNavItemClick(\"home\")}\n                  className=\"text-white\"\n                >\n                  الصفحة الرئيسية\n                </CNavLink>\n              </CNavItem>\n            </CNavbarNav>\n            <CForm className=\"d-flex\"></CForm>\n          </CCollapse>\n        </CContainer>\n      </CNavbar>\n    </div>\n  );\n};\n\nexport default NavbarD;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ChildInfo.css\";\nimport ChildImg from \"../../assets/image/ChildDoctor.jpeg\";\nimport { useChild } from \"../../assets/useRef/ChildContext\"; // Ensure this path is correct\n\nconst ChildInfo = () => {\n  const [childInfo, setChildInfo] = useState([]);\n  const [notes, setNotes] = useState([]);\n  const [display, setDisplay] = useState(\"child\");\n\n  // Using useChild hook to get the current child ID\n  const { ID } = useChild();\n\n  // Fetch child information based on ID from context\n  useEffect(() => {\n    const fetchChildInfo = async () => {\n      if (ID) {\n        try {\n          const response = await axios.get(\n            `http://localhost:4406/api/doctor/child/ChildInfoPage/${ID}`\n          );\n          setChildInfo(response.data);\n        } catch (error) {\n          console.error(\"Error fetching child data:\", error);\n        }\n      }\n    };\n\n    const fetchNotes = async () => {\n      if (ID) {\n        try {\n          const response = await axios.get(\n            `http://localhost:4406/api/doctor/child/notes/${ID}`\n          );\n          setNotes(response.data);\n        } catch (error) {\n          console.error(\"Error fetching notes:\", error);\n        }\n      }\n    };\n\n    fetchChildInfo();\n    fetchNotes();\n  }, [ID]); // Depend on ID from the context\n\n  const formatDate = (dateString) => {\n    if (!dateString) {\n      console.error(\"Invalid date string:\", dateString);\n      return \"Invalid date\"; // or you can return a default date or handle it as needed\n    }\n\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      console.error(\"Cannot parse date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    return new Intl.DateTimeFormat(\"ar-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    }).format(date);\n  };\n\n  return (\n    <div className=\"child-info-container\">\n      <div className=\"buttons-container\">\n        <button onClick={() => setDisplay(\"child\")}>عرض معلومات الطفل</button>\n        <button onClick={() => setDisplay(\"note\")}>عرض الملاحظات</button>\n      </div>\n\n      <div>\n        <img src={ChildImg} alt=\"Child background\" className=\"Child-bg-img\" />\n      </div>\n      {display === \"child\" && childInfo ? (\n        <div className=\"card-img-child\">\n          <div className=\"table-container\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>الاسم</td>\n                  <td>\n                    {childInfo.first_name} {childInfo.last_name}\n                  </td>\n                </tr>\n                <tr>\n                  <td>رقم الهوية</td>\n                  <td>{childInfo.ID}</td>\n                </tr>\n                <tr>\n                  <td>الجنس</td>\n                  <td>{childInfo.gender}</td>\n                </tr>\n                <tr>\n                  <td>تاريخ الميلاد</td>\n                  <td>{formatDate(childInfo.DOB)}</td>\n                </tr>\n                <tr>\n                  <td>رقم الطفل التسلسلي</td>\n                  <td>{childInfo.Child_Serial_No}</td>\n                </tr>\n                <tr>\n                  <td>فصيلة الدم</td>\n                  <td>{childInfo.blood_type}</td>\n                </tr>\n                <tr>\n                  <td>الحساسية</td>\n                  <td>{childInfo.allergy || \"None\"}</td>\n                </tr>\n                <tr>\n                  <td>اسم الأم</td>\n                  <td>\n                    {childInfo.mother_first_name} {childInfo.mother_last_name}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ) : display === \"note\" ? (\n        <div className=\"note-container\">\n          {notes.length > 0 ? (\n            <table className=\"notes-table\">\n              <thead>\n                <tr>\n                  <th>التاريخ</th>\n                  <th>الملاحظة</th>\n                </tr>\n              </thead>\n              <tbody>\n                {notes.map((note) => (\n                  <tr key={note.ID}>\n                    <td>{formatDate(note.NoteDate)}</td>\n                    <td>{note.Note}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>No notes available.</p>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ChildInfo;\n","import React from \"react\";\nimport \"./ChildInfoPage.css\";\nimport NavbarD from \"../../../component/NavbarDoc/NavbarDoc\";\nimport ChildInfo from \"../../../component/ChildInfo/ChildInfo\";\nconst ChildInfoPage = () => {\n  return (\n    <div className=\"ChildInfo\">\n      <div>\n        <NavbarD />\n      </div>\n      <div>\n        <ChildInfo />\n      </div>\n    </div>\n  );\n};\n\nexport default ChildInfoPage;\n"],"names":["NavbarD","visible","setVisible","useState","activeNavItem","setActiveNavItem","handleNavItemClick","itemName","_jsx","id","children","CNavbar","expand","colorScheme","style","backgroundImage","className","_jsxs","CContainer","fluid","CNavbarBrand","href","OverlayTrigger","placement","overlay","Tooltip","src","profileImage","alt","height","CNavbarToggler","onClick","CCollapse","CNavbarNav","CNavItem","CNavLink","active","CForm","ChildInfo","childInfo","setChildInfo","notes","setNotes","display","setDisplay","ID","useChild","useEffect","async","response","axios","get","concat","data","error","console","fetchChildInfo","fetchNotes","formatDate","dateString","date","Date","isNaN","getTime","Intl","DateTimeFormat","year","month","day","format","ChildImg","first_name","last_name","gender","DOB","Child_Serial_No","blood_type","allergy","mother_first_name","mother_last_name","length","map","note","NoteDate","Note","ChildInfoPage"],"sourceRoot":""}