{"version":3,"file":"static/js/232.e6623be2.chunk.js","mappings":"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","sources":["component/NavbarDoc/NavbarDoc.jsx","component/ChildTableMeasur/ChildTableMeasur.jsx","pages/Doctor/ChildMeasurDoc/ChildMeasurDoc.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavbarDoc.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport {\n  CNavbarToggler,\n  CCollapse,\n  CNavbarNav,\n  CNavItem,\n  CNavLink,\n  CNavbar,\n  CContainer,\n  CNavbarBrand,\n  CForm,\n} from \"@coreui/react\";\nimport profileImage from \"../../assets/image/profile.png\"; // Adjust the path to where your image is stored\n\nconst NavbarD = () => {\n  const [visible, setVisible] = useState(false);\n  const [activeNavItem, setActiveNavItem] = useState(\"//home\");\n\n  const handleNavItemClick = (itemName) => {\n    setActiveNavItem(itemName);\n    setVisible(false); // Close the menu after clicking an item on small devices\n  };\n\n  return (\n    <div id=\"color\">\n      <CNavbar\n        expand=\"lg\"\n        colorScheme=\"light\"\n        style={{\n          backgroundImage:\n            \"radial-gradient(circle at 53.4% -80.8%, rgba(9, 29, 85, 1) 0.2%, rgba(0, 0, 0, 1) 100.2%)\",\n        }}\n        className=\"fixed-top color\"\n      >\n        <CContainer fluid>\n          <CNavbarBrand className=\"text-white\" href=\"/login\">\n            تسجيل الخروج\n          </CNavbarBrand>\n          <CNavbarBrand href=\"/\">\n            <OverlayTrigger\n              key=\"right\"\n              placement=\"right\"\n              overlay={<Tooltip id=\"tooltip-right\">الملف الشخصي</Tooltip>}\n            >\n              <img\n                src={profileImage}\n                alt=\"Profile\"\n                style={{ height: \"30px\" }}\n              />\n            </OverlayTrigger>\n          </CNavbarBrand>\n          <CNavbarToggler onClick={() => setVisible(!visible)} />\n          <CCollapse className=\"navbar-collapse items\" visible={visible}>\n            <CNavbarNav className=\"ms-auto\">\n              <CNavItem>\n                <CNavLink\n                  href=\"https://www.youtube.com/\"\n                  active={activeNavItem === \"notes\"}\n                  onClick={() => handleNavItemClick(\"notes\")}\n                  className=\"text-white \"\n                >\n                  احصائيات\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/Doctor/Appointments\"\n                  active={activeNavItem === \"health\"}\n                  onClick={() => handleNavItemClick(\"health\")}\n                  className=\"text-white\"\n                >\n                  جدول المواعيد\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/doctor/child\"\n                  active={activeNavItem === \"health\"}\n                  onClick={() => handleNavItemClick(\"health\")}\n                  className=\"text-white\"\n                >\n                  الاطفال\n                </CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink\n                  href=\"/doctor/home\"\n                  active={activeNavItem === \"home\"}\n                  onClick={() => handleNavItemClick(\"home\")}\n                  className=\"text-white\"\n                >\n                  الصفحة الرئيسية\n                </CNavLink>\n              </CNavItem>\n            </CNavbarNav>\n            <CForm className=\"d-flex\"></CForm>\n          </CCollapse>\n        </CContainer>\n      </CNavbar>\n    </div>\n  );\n};\n\nexport default NavbarD;\n","import React, { useState, useEffect } from \"react\";\nimport { useChild } from \"../../assets/useRef/ChildContext\"; // Check the path\nimport \"./ChildTableMeasur.css\";\n\nconst ChildTableMeasur = () => {\n  const { ID } = useChild();\n  const [data, setData] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [newRow, setNewRow] = useState({\n    age: \"\",\n    weight: \"\",\n    height: \"\",\n    headCircumference: \"\",\n    vitaminAD: \"\",\n    vitaminK: \"\",\n    iron: \"\",\n    nurseName: \"\",\n  });\n\n  useEffect(() => {\n    fetch(`http://localhost:3121/api/doctor/measurement/${ID}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!Array.isArray(data)) {\n          setData([]);\n        } else {\n          setData(data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n        setData([]); // Set data to an empty array in case of error\n      });\n  }, [ID]);\n  console.log(data);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNewRow((prevRow) => ({ ...prevRow, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    const newMeasurement = { ...newRow, date: currentDate, childID: ID };\n\n    fetch(\"http://localhost:3121/api/doctor/measurement\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newMeasurement),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setData((prevData) => [...prevData, data]);\n        setNewRow({\n          age: \"\",\n          weight: \"\",\n          height: \"\",\n          headCircumference: \"\",\n          vitaminAD: \"\",\n          vitaminK: \"\",\n          iron: \"\",\n          nurseName: \"\",\n        });\n        setShowForm(false);\n      })\n      .catch((error) => console.error(\"Error adding data:\", error));\n  };\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title1\">جدول القياسات</h1>\n      <h2 className=\"form-heading\">اسم الطفل</h2>\n      <h3>{ID}</h3>\n\n      {showForm && (\n        <form className=\"form1\" onSubmit={handleSubmit}>\n          <label className=\"label\">\n            <span className=\"label-text\">العمر (بالاشهر):</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"age\"\n              required\n              value={newRow.age}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">الوزن:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"weight\"\n              required\n              value={newRow.weight}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">الطول:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              required\n              name=\"height\"\n              value={newRow.height}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">محيط الرأس:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"headCircumference\"\n              required\n              value={newRow.headCircumference}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">فيتامين أ+د:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"vitaminAD\"\n              required\n              value={newRow.vitaminAD}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">فيتامين كابسويل أ:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"vitaminK\"\n              required\n              value={newRow.vitaminK}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">الحديد:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"iron\"\n              required\n              value={newRow.iron}\n              onChange={handleChange}\n            />\n          </label>\n          <label className=\"label\">\n            <span className=\"label-text\">اسم الممرضة:</span>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"nurseName\"\n              required\n              value={newRow.nurseName}\n              onChange={handleChange}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\">\n            إضافة\n          </button>\n        </form>\n      )}\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>اسم الممرضة</th>\n            <th>الحديد</th>\n            <th>فيتامين كابسويل أ</th>\n            <th>فيتامين أ+د</th>\n            <th>محيط الرأس</th>\n            <th>الطول</th>\n            <th>الوزن</th>\n            <th>العمر (بالاشهر)</th>\n            <th>التاريخ</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index}>\n              <td>{row.nurseName}</td>\n              <td>{row.Iron}</td>\n              <td>{row.vitaminK}</td>\n              <td>{row.vitamin_A_D}</td>\n              <td>{row.headCircumference}</td>\n              <td>{row.height}</td>\n              <td>{row.weight}</td>\n              <td>{row.age}</td>\n              <td>{row.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button className=\"button\" onClick={toggleForm}>\n        إضافة\n      </button>\n    </div>\n  );\n};\n\nexport default ChildTableMeasur;\n","import React from \"react\";\nimport NavbarD from \"../../../component/NavbarDoc/NavbarDoc\";\nimport ChildTableMeasur from \"../../../component/ChildTableMeasur/ChildTableMeasur\";\n\nconst ChildMeasurDoc = () => {\n  return (\n    <div>\n      <div>\n        <NavbarD/>\n      </div>\n      <div>\n        <ChildTableMeasur/>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default ChildMeasurDoc;\n"],"names":["NavbarD","visible","setVisible","useState","activeNavItem","setActiveNavItem","handleNavItemClick","itemName","_jsx","id","children","CNavbar","expand","colorScheme","style","backgroundImage","className","_jsxs","CContainer","fluid","CNavbarBrand","href","OverlayTrigger","placement","overlay","Tooltip","src","profileImage","alt","height","CNavbarToggler","onClick","CCollapse","CNavbarNav","CNavItem","CNavLink","active","CForm","ChildTableMeasur","ID","useChild","data","setData","showForm","setShowForm","newRow","setNewRow","age","weight","headCircumference","vitaminAD","vitaminK","iron","nurseName","useEffect","fetch","concat","then","response","json","Array","isArray","catch","error","console","log","handleChange","e","name","value","target","prevRow","onSubmit","preventDefault","currentDate","Date","toISOString","split","newMeasurement","date","childID","method","headers","body","JSON","stringify","prevData","type","required","onChange","map","row","index","Iron","vitamin_A_D","toggleForm","ChildMeasurDoc"],"sourceRoot":""}