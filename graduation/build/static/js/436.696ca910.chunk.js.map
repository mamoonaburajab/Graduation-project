{"version":3,"file":"static/js/436.696ca910.chunk.js","mappings":"6JAGA,MA0GA,EA1GmBA,KACjB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,SAEjCG,EAAAA,EAAAA,YAAU,KACRC,GAAe,GACd,IAEH,MAAMA,EAAgBA,KACpBC,MAAM,qDACHC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,GAASV,EAAYU,KAC3BC,OAAOC,IACNC,QAAQD,MAAM,2BAA4BA,GAC1CE,MAAM,4BAA4B,GAClC,EAiCN,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMhB,EAAQ,QAAQc,SAAC,4FACxCC,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMhB,EAAQ,QAAQc,SAAC,iFAEhC,SAATf,IACCa,EAAAA,EAAAA,MAAA,QAAMK,SAtCUC,IACpBA,EAAMC,iBACN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAc,CAClBC,GAAIJ,EAASK,IAAI,MACjBC,WAAYN,EAASK,IAAI,cACzBE,UAAWP,EAASK,IAAI,aACxBG,SAAUR,EAASK,IAAI,aAGzBtB,MAAM,oDAAqD,CACzD0B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,KAEpBnB,MAAMC,GAAaA,EAASC,SAC5BF,MAAM8B,IACLvB,MAAM,8BACNd,EAAY,IAAID,EAAUsC,GAAY,IAEvC1B,OAAOC,IACNC,QAAQD,MAAM,SAAUA,GACxBE,MAAM,yBAAyB,IAGnCO,EAAMI,OAAOa,OAAO,EAWarB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEqB,KAAK,aACLvB,UAAU,aACVwB,KAAK,OACLC,YAAY,gEACZC,UAAQ,KAEVxB,EAAAA,EAAAA,KAAA,SACEqB,KAAK,YACLvB,UAAU,aACVwB,KAAK,OACLC,YAAY,sEACZC,UAAQ,KAEVxB,EAAAA,EAAAA,KAAA,SACEqB,KAAK,KACLvB,UAAU,aACVwB,KAAK,OACLC,YAAY,0DACZC,UAAQ,KAEVxB,EAAAA,EAAAA,KAAA,SACEqB,KAAK,WACLvB,UAAU,aACVwB,KAAK,OACLC,YAAY,0DACZC,UAAQ,KAEVxB,EAAAA,EAAAA,KAAA,UAAQF,UAAU,gBAAgBwB,KAAK,SAAQvB,SAAC,sCAK1C,SAATf,IACCa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8EACHlB,EAAS4C,KAAI,CAACC,EAASC,KACtB3B,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CACG2B,EAAQf,WAAW,IAAEe,EAAQd,UAAU,MAAIc,EAAQb,aAF9Cc,UAQZ,ECzFV,EAbcC,KAEV/B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,aAAYC,UAC5BC,EAAAA,EAAAA,KAAA,KAAG6B,KAAK,SAAQ9B,SAAC,6EAGrBC,EAAAA,EAAAA,KAACpB,EAAU,M","sources":["component/AddManager/AddManager.jsx","pages/Admin/Admin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Addmanager.css\";\n\nconst AddManager = () => {\n  const [managers, setManagers] = useState([]);\n  const [view, setView] = useState(\"form\");\n\n  useEffect(() => {\n    fetchManagers();\n  }, []);\n\n  const fetchManagers = () => {\n    fetch(\"http://localhost:3121/administrative_manager/home\")\n      .then((response) => response.json())\n      .then((data) => setManagers(data))\n      .catch((error) => {\n        console.error(\"Error fetching managers:\", error);\n        alert(\"Failed to fetch managers.\");\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const managerData = {\n      ID: formData.get(\"ID\"),\n      first_name: formData.get(\"first_name\"),\n      last_name: formData.get(\"last_name\"),\n      phone_No: formData.get(\"phone_No\"),\n    };\n\n    fetch(\"http://localhost:3121/administrative_manager/home\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(managerData),\n    })\n      .then((response) => response.json())\n      .then((newManager) => {\n        alert(\"Manager added successfully\");\n        setManagers([...managers, newManager]);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        alert(\"Failed to add manager.\");\n      });\n\n    event.target.reset(); // Reset the form fields after submission\n  };\n\n  return (\n    <div className=\"add-manager-container\">\n      <h2>إدارة المدراء</h2>\n      <div className=\"buttons-container\">\n        <button onClick={() => setView(\"form\")}>اضافة مدير اداري</button>\n        <button onClick={() => setView(\"list\")}>قائمة المدراء</button>\n      </div>\n      {view === \"form\" && (\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"first_name\"\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"الاسم الأول\"\n            required\n          />\n          <input\n            name=\"last_name\"\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"الاسم الأخير\"\n            required\n          />\n          <input\n            name=\"ID\"\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"رقم الهوية\"\n            required\n          />\n          <input\n            name=\"phone_No\"\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"رقم الهاتف\"\n            required\n          />\n          <button className=\"submit-button\" type=\"submit\">\n            إضافة\n          </button>\n        </form>\n      )}\n      {view === \"list\" && (\n        <div className=\"managers-list\">\n          <h3>قائمة المدراء</h3>\n          {managers.map((manager, index) => (\n            <div key={index}>\n              <p>\n                {manager.first_name} {manager.last_name} - {manager.phone_No}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddManager;\n","import React from \"react\";\nimport AddManager from \"../../component/AddManager/AddManager\";\nimport \"./Admin.css\";\nconst Admin = () => {\n  return (\n    <div className=\"Admin\">\n      <nav className=\"navbar\">\n        <button className=\"nav-button\">\n          <a href=\"/login\">تسجيل الخروج</a>\n        </button>\n      </nav>\n      <AddManager />\n    </div>\n  );\n};\n\nexport default Admin;\n"],"names":["AddManager","managers","setManagers","useState","view","setView","useEffect","fetchManagers","fetch","then","response","json","data","catch","error","console","alert","_jsxs","className","children","_jsx","onClick","onSubmit","event","preventDefault","formData","FormData","target","managerData","ID","get","first_name","last_name","phone_No","method","headers","body","JSON","stringify","newManager","reset","name","type","placeholder","required","map","manager","index","Admin","href"],"sourceRoot":""}